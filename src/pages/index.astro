---
import bg from "../assets/bg.jpeg";
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <!-- Hero Section -->
  <header id="hero">
    <div class="container">
      <div class="hero-content">
        <h1>
          Decentralized Governance for <span class="highlight"
            >Splinterlands</span
          >
        </h1>
        <p>
          SPS DAO empowers the community to shape the future of the
          Splinterlands ecosystem
        </p>
        <div class="hero-buttons pulse">
          <a
            href="https://splinterlands.com"
            class="btn primary shine pulse"
            target="_blank">Play Splinterlands</a
          >
          <a href="#governance" class="btn secondary pulse"
            >Learn About Governance</a
          >
        </div>
      </div>
    </div>
  </header>

  <!-- About Section -->
  <section id="about">
    <div class="container">
      <div class="section-header scroll-animate">
        <h2>About <span class="highlight">SPS DAO</span></h2>
        <p>
          Decentralized Autonomous Organization for the Splinterlands ecosystem
        </p>
      </div>
      <div class="content-flex scroll-animate">
        <div class="content-text">
          <p>
            The SPS token and all related tokens and smart contracts are set up
            as a Decentralized Autonomous Organization (DAO). All decisions
            relating to the token and related assets or contracts are decided
            via votes of all staked SPS token holders, with the weight of the
            votes being determined by the amount of staked SPS tokens held in
            each participating wallet.
          </p>
          <p>
            The DAO is able to hold, send, and receive cryptocurrency which
            allows it to sell products and pay for services at the direction of
            the token holders. All of the funds owned by the DAO, including
            those from the SPS private token sale, token emissions that go
            towards the DAO, and proceeds from product sales on behalf of the
            DAO (e.g. LICENSE tokens and Riftwatchers packs), are currently held
            in DAO multisig wallets that are controlled by DAO elected
            Treasurers.
          </p>
          <h3>SPS Foundation</h3>
          <p>
            The SPS Foundation is a Panama-based Private Interest Foundation
            owned and operated by a board of DAO elected representatives. The
            purpose of the SPS Foundation is to represent and carry out the will
            of the SPS DAO and to bridge the gap between the decentralized,
            blockchain-based structure of the DAO and traditional legal and
            regulatory systems.
          </p>
        </div>
        <div class="about-cards">
          <div class="card scroll-animate glowable tiltable">
            <i class="fas fa-vote-yea"></i>
            <h3>Community Governance</h3>
            <p>
              All staked SPS holders can vote on proposals and help shape the
              future of Splinterlands.
            </p>
          </div>
          <div class="card scroll-animate glowable tiltable">
            <i class="fas fa-coins"></i>
            <h3>Treasury Management</h3>
            <p>
              The DAO manages a substantial treasury with elected Treasurers who
              oversee fund allocation.
            </p>
          </div>
          <div class="card scroll-animate glowable tiltable">
            <i class="fas fa-project-diagram"></i>
            <h3>Ecosystem Development</h3>
            <p>
              Funding new features, partnerships, and initiatives to grow the
              Splinterlands ecosystem.
            </p>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Token Section -->
  <section id="token">
    <div class="container">
      <div class="section-header scroll-animate">
        <h2>The <span class="highlight">SPS Token</span></h2>
        <p>
          Splintershards - The governance token of the Splinterlands ecosystem
        </p>
      </div>
      <div class="token-grid scroll-animate">
        <div class="token-info scroll-animate">
          <h3>Token Utility</h3>
          <ul>
            <li>
              <i class="fas fa-check-circle"></i> Governance voting rights
            </li>
            <li><i class="fas fa-check-circle"></i> Staking rewards</li>
            <li>
              <i class="fas fa-check-circle"></i> Access to VOUCHER tokens
            </li>
            <li>
              <i class="fas fa-check-circle"></i> Validator node operations
            </li>
            <li><i class="fas fa-check-circle"></i> Play-to-earn rewards</li>
          </ul>
          <div class="token-stats">
            <div class="stat-item">
              <h4>Max Supply</h4>
              <p>3,000,000,000</p>
            </div>
            <div class="stat-item">
              <h4>Current Circulating</h4>
              <p>~1,950,000,000</p>
            </div>
          </div>
        </div>
        <div class="token-distribution scroll-animate">
          <h3>Token Distribution</h3>
          <div class="chart-container">
            <canvas id="distributionChart"></canvas>
          </div>
          <div class="distribution-legend">
            <div class="legend-item">
              <span class="color-box" style="background-color: #FF6384;"></span>
              <p>Play to Earn (30%) - 900M</p>
            </div>
            <div class="legend-item">
              <span class="color-box" style="background-color: #36A2EB;"></span>
              <p>Staking/LP/Oracle (30%) - 900M</p>
            </div>
            <div class="legend-item">
              <span class="color-box" style="background-color: #FFCE56;"></span>
              <p>Airdrop (13.33%) - 400M</p>
            </div>
            <div class="legend-item">
              <span class="color-box" style="background-color: #4BC0C0;"></span>
              <p>Foundation/DAO (10%) - 300M</p>
            </div>
            <div class="legend-item">
              <span class="color-box" style="background-color: #9966FF;"></span>
              <p>Unallocated (9%) - 270M</p>
            </div>
            <div class="legend-item">
              <span class="color-box" style="background-color: #FF9F40;"></span>
              <p>Private Sale (6.66%) - 200M</p>
            </div>
            <div class="legend-item">
              <span class="color-box" style="background-color: #C9CBCF;"></span>
              <p>Partners/Advisors (1%) - 30M</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Governance Section -->
  <section id="governance">
    <div class="container">
      <div class="section-header">
        <h2>DAO <span class="highlight">Governance</span></h2>
        <p>How decisions are made in the SPS DAO</p>
      </div>
      <div class="governance-process scroll-animate">
        <div class="process-step">
          <div class="step-number">1</div>
          <div class="step-content">
            <h3>Pre-Voting Phase</h3>
            <p>
              Anyone can submit a governance proposal by publishing a post on
              the Hive blockchain with #spsproposal as the first tag. A fee of
              100,000 DEC tokens must be burned to submit a proposal.
            </p>
          </div>
        </div>
        <div class="process-step">
          <div class="step-number">2</div>
          <div class="step-content">
            <h3>Formal Voting Phase</h3>
            <p>
              Valid proposals move to the formal voting phase where staked SPS
              token holders can vote. Voting power is proportional to the amount
              of SPS staked.
            </p>
          </div>
        </div>
        <div class="process-step">
          <div class="step-number">3</div>
          <div class="step-content">
            <h3>Proposal Implementation</h3>
            <p>
              If a proposal passes, the SPS DAO Treasurers execute the approved
              transactions or actions according to the proposal specifications.
            </p>
          </div>
        </div>
      </div>
      <div class="governance-topics">
        <h3>Common Proposal Topics</h3>
        <div class="topics-grid scroll-animate">
          <div class="topic-card scroll-animate glowable tiltable">
            <i class="fas fa-chart-line interactive-icon"></i>
            <h4>Treasury Allocation</h4>
            <p>
              How to allocate treasury funds for development, marketing, and
              other initiatives.
            </p>
          </div>
          <div class="topic-card scroll-animate glowable tiltable">
            <i class="fas fa-handshake interactive-icon"></i>
            <h4>Partnerships</h4>
            <p>
              Evaluating and approving strategic partnerships with other
              projects or companies.
            </p>
          </div>
          <div class="topic-card scroll-animate glowable tiltable">
            <i class="fas fa-cogs interactive-icon"></i>
            <h4>Protocol Updates</h4>
            <p>
              Changes to the SPS token mechanics, reward systems, or governance
              processes.
            </p>
          </div>
          <div class="topic-card scroll-animate glowable tiltable">
            <i class="fas fa-users interactive-icon"></i>
            <h4>Community Initiatives</h4>
            <p>
              Funding for community-led projects, events, or marketing
              activities.
            </p>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Treasury Section -->
  <section id="treasury">
    <div class="container">
      <div class="section-header scroll-animate">
        <h2>DAO <span class="highlight">Treasury</span></h2>
        <p>Transparent management of community assets</p>
      </div>
      <div class="treasury-highlight">
        <div class="treasury-total">
          <h3>Total Treasury Value</h3>
          <p class="treasury-value">$6,386,899</p>
          <p class="treasury-date">As of April 2025</p>
        </div>
        <div class="treasury-allocation">
          <h3>Key Holdings</h3>
          <div class="allocation-grid">
            <div class="allocation-item">
              <h4>SPS</h4>
              <p>586,466,300 tokens</p>
              <p class="allocation-value">$4,180,204</p>
            </div>
            <div class="allocation-item">
              <h4>DEC</h4>
              <p>1.47B tokens</p>
              <p class="allocation-value">$1,311,383</p>
            </div>
            <div class="allocation-item">
              <h4>HIVE Power</h4>
              <p>1.13M HP</p>
              <p class="allocation-value">$270,324</p>
            </div>
            <div class="allocation-item">
              <h4>RIFT</h4>
              <p>204,089 tokens</p>
              <p class="allocation-value">$439,264</p>
            </div>
          </div>
        </div>
      </div>
      <div class="treasury-usage">
        <h3>How Treasury Funds Can Be Used</h3>
        <div class="usage-grid">
          <div class="usage-card tiltable">
            <i class="fas fa-water interactive-icon"></i>
            <h4>Providing Liquidity</h4>
            <p>
              Token holders may vote to use foundation tokens to provide
              liquidity for the SPS token on third-party markets.
            </p>
          </div>
          <div class="usage-card tiltable">
            <i class="fas fa-server interactive-icon"></i>
            <h4>Paying for Services</h4>
            <p>
              Funds can be used to pay for services like exchange listings,
              marketing, or promotional activities.
            </p>
          </div>
          <div class="usage-card tiltable">
            <i class="fas fa-code interactive-icon"></i>
            <h4>Funding Development</h4>
            <p>
              Supporting third-party development of tools and services that add
              value to the Splinterlands ecosystem.
            </p>
          </div>
          <div class="usage-card tiltable">
            <i class="fas fa-search-dollar interactive-icon"></i>
            <h4>Investments</h4>
            <p>
              Investing in other assets or tokens to earn returns and help
              sustain the foundation long-term.
            </p>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Proposals Section -->
  <section id="proposals">
    <div class="container">
      <div class="section-header scroll-animate">
        <h2>Active <span class="highlight">Proposals</span></h2>
        <p>Current proposals under consideration by the community</p>
      </div>
      <div class="proposals-list">
        <div class="proposal-card">
          <div class="proposal-status active">Active</div>
          <h3>Reduce SPS to DEC Conversion Fee</h3>
          <p>
            A proposal to reduce the conversion fee when swapping SPS tokens to
            DEC tokens to encourage more economic activity.
          </p>
          <div class="proposal-meta">
            <span
              ><i class="fas fa-calendar"></i> Voting ends: May 10, 2025</span
            >
            <span><i class="fas fa-user"></i> Proposed by: clayboyn</span>
          </div>
          <a
            href="https://www.waivio.com/@clayboyn/sps-governance-proposal-reduce-sps-to-dec-conversion-fee"
            class="btn secondary pulse"
            target="_blank">View Details</a
          >
        </div>
        <div class="proposal-card">
          <div class="proposal-status active">Active</div>
          <h3>Stop SPS:BNB Pool Incentives</h3>
          <p>
            A proposal to reallocate the rewards currently being distributed to
            the SPS:BNB liquidity pool to other programs.
          </p>
          <div class="proposal-meta">
            <span><i class="fas fa-calendar"></i> Voting ends: May 8, 2025</span
            >
            <span><i class="fas fa-user"></i> Proposed by: clayboyn</span>
          </div>
          <a
            href="https://www.waivio.com/@clayboyn/sps-governance-proposal-stop-sps-bnb-pool-incentives"
            class="btn secondary pulse"
            target="_blank">View Details</a
          >
        </div>
        <div class="proposal-card">
          <div class="proposal-status completed">Completed</div>
          <h3>Guidelines for Treasurers</h3>
          <p>
            Standard guidelines that the SPS DAO Treasurers will follow when
            executing transactions on behalf of the SPS DAO.
          </p>
          <div class="proposal-meta">
            <span
              ><i class="fas fa-calendar"></i> Completed: April 15, 2025</span
            >
            <span><i class="fas fa-user"></i> Proposed by: clayboyn</span>
          </div>
          <a
            href="https://www.waivio.com/@clayboyn/sps-governance-proposal-guidelines-for-treasurers"
            class="btn secondary pulse"
            target="_blank">View Details</a
          >
        </div>
      </div>
      <div class="proposals-cta pulse">
        <h3>Have an idea to improve Splinterlands?</h3>
        <p>
          Anyone can submit a governance proposal for consideration by the
          community.
        </p>
        <a
          href="https://sps.splinterlands.com/in-game-governance"
          class="btn primary shine pulse"
          target="_blank">Learn How to Submit a Proposal</a
        >
      </div>
    </div>
  </section>

  <!-- Resources Section -->
  <section id="resources">
    <div class="container">
      <div class="section-header scroll-animate">
        <h2>DAO <span class="highlight">Resources</span></h2>
        <p>Essential links and documentation for the SPS DAO</p>
      </div>
      <div class="resources-grid scroll-animate">
        <a
          href="https://sps.splinterlands.com/"
          class="resource-card glowable tiltable"
          target="_blank"
        >
          <i class="fas fa-file-alt interactive-icon"></i>
          <h3>SPS Documentation</h3>
          <p>
            Official documentation covering all aspects of the SPS token
            ecosystem
          </p>
        </a>
        <a
          href="https://splinterlands.com"
          class="resource-card glowable tiltable"
          target="_blank"
        >
          <i class="fas fa-gamepad interactive-icon"></i>
          <h3>Splinterlands Game</h3>
          <p>Play the Splinterlands collectible card game</p>
        </a>
        <a
          href="https://hive.blog/trending/splinterlands"
          class="resource-card glowable tiltable"
          target="_blank"
        >
          <i class="fas fa-blog interactive-icon"></i>
          <h3>Community Blog</h3>
          <p>Latest news, updates, and discussions about Splinterlands</p>
        </a>
        <a
          href="https://discord.com/invite/splinterlands"
          class="resource-card glowable tiltable"
          target="_blank"
        >
          <i class="fab fa-discord interactive-icon"></i>
          <h3>Discord Community</h3>
          <p>Join the official Splinterlands Discord server</p>
        </a>
        <a
          href="https://github.com/TheSPSDAO"
          class="resource-card glowable tiltable"
          target="_blank"
        >
          <i class="fab fa-github interactive-icon"></i>
          <h3>GitHub</h3>
          <p>Open-source repositories and code from the SPS DAO</p>
        </a>
        <a
          href="https://twitter.com/splinterlands"
          class="resource-card glowable tiltable"
          target="_blank"
        >
          <i class="fab fa-twitter interactive-icon"></i>
          <h3>Twitter</h3>
          <p>Follow Splinterlands on Twitter for the latest updates</p>
        </a>
      </div>
    </div>
  </section>
</Layout>

<script>
  // DOM Elements
  const allSections = document.querySelectorAll("section");

  // Charts
  let distributionChart;

  document.addEventListener("DOMContentLoaded", function () {
    // Set data-text attribute for fire effect
    const heroTitle = document.querySelector(".hero-content h1");
    if (heroTitle) {
      heroTitle.setAttribute("data-text", heroTitle.textContent!);
    }

    // Initialize animations and interactive elements
    initCharts();
    addPageInteractivity();
    initTextFireParticles();
  });

  // Initialize charts
  function initCharts() {
    // Token distribution chart
    const distributionCtx = document.getElementById("distributionChart");
    if (distributionCtx) {
      distributionChart = new Chart(distributionCtx, {
        type: "doughnut",
        data: {
          labels: [
            "Play to Earn (30%)",
            "Staking/LP/Oracle (30%)",
            "Airdrop (13.33%)",
            "Foundation/DAO (10%)",
            "Unallocated (9%)",
            "Private Sale (6.66%)",
            "Partners/Advisors (1%)",
          ],
          datasets: [
            {
              data: [30, 30, 13.33, 10, 9, 6.66, 1],
              backgroundColor: [
                "#FF6384",
                "#36A2EB",
                "#FFCE56",
                "#4BC0C0",
                "#9966FF",
                "#FF9F40",
                "#C9CBCF",
              ],
              borderWidth: 0,
              hoverOffset: 10,
            },
          ],
        },
        options: {
          responsive: true,
          plugins: {
            legend: {
              display: false,
            },
            tooltip: {
              callbacks: {
                label: function (context: { label: string; parsed: number }) {
                  const label = context.label || "";
                  const value = context.parsed || 0;
                  return `${label}: ${value}%`;
                },
              },
            },
          },
          cutout: "70%",
          animation: {
            animateRotate: true,
            animateScale: true,
            duration: 2000,
            easing: "easeOutQuart",
          },
        },
      });
    }
  }

  // Add more interactivity to the page
  function addPageInteractivity() {
    // Add parallax effect to hero section
    const hero = document.getElementById("hero");
    if (hero) {
      window.addEventListener("scroll", function () {
        const scrollPosition = window.scrollY;
        if (scrollPosition < window.innerHeight) {
          hero.style.backgroundPositionY = `${scrollPosition * 0.4}px`;
        }
      });
    }

    // Create dynamic particles in hero section for added visual interest
    createParticles();
  }

  // Create dynamic particles in hero section
  function createParticles() {
    const hero = document.getElementById("hero");
    if (!hero) return;

    const particlesContainer = document.createElement("div");
    particlesContainer.className = "particles-container";
    particlesContainer.style.position = "absolute";
    particlesContainer.style.top = "0";
    particlesContainer.style.left = "0";
    particlesContainer.style.width = "100%";
    particlesContainer.style.height = "100%";
    particlesContainer.style.overflow = "hidden";
    particlesContainer.style.zIndex = "0";
    hero.appendChild(particlesContainer);

    // Create particles
    for (let i = 0; i < 30; i++) {
      createParticle(particlesContainer);
    }
  }

  function createParticle(container: HTMLDivElement) {
    const particle = document.createElement("div");

    // Random position
    const posX = Math.random() * 100;
    const posY = Math.random() * 100;

    // Random size
    const size = Math.random() * 5 + 2;

    // Random color
    const colors = [
      "rgba(66, 198, 235, 0.7)",
      "rgba(156, 77, 255, 0.7)",
      "rgba(255, 255, 255, 0.5)",
    ];
    const color = colors[Math.floor(Math.random() * colors.length)];

    // Random animation duration
    const duration = Math.random() * 20 + 10;

    // Style the particle
    particle.style.position = "absolute";
    particle.style.left = `${posX}%`;
    particle.style.top = `${posY}%`;
    particle.style.width = `${size}px`;
    particle.style.height = `${size}px`;
    particle.style.backgroundColor = color;
    particle.style.borderRadius = "50%";
    particle.style.filter = "blur(1px)";
    particle.style.opacity = "0";
    particle.style.animation = `particle-float ${duration}s infinite ease-in-out`;

    // Add keyframes for the animation if they don't exist yet
    if (!document.getElementById("particle-keyframes")) {
      const style = document.createElement("style");
      style.id = "particle-keyframes";
      style.innerHTML = `
            @keyframes particle-float {
                0% { transform: translateY(0) rotate(0deg); opacity: 0; }
                20% { opacity: 0.8; }
                80% { opacity: 0.8; }
                100% { transform: translateY(-100px) rotate(360deg); opacity: 0; }
            }
        `;
      document.head.appendChild(style);
    }

    container.appendChild(particle);

    // Remove and recreate particle after animation ends
    setTimeout(() => {
      particle.remove();
      createParticle(container);
    }, duration * 1000);
  }

  // Dynamic counter animation for treasury value
  const animateCounter = (
    element: Element,
    targetValue: number,
    duration = 2000
  ) => {
    const start = 0;
    const increment = targetValue / (duration / 16);
    let current = start;

    const updateCounter = () => {
      current += increment;
      if (current < targetValue) {
        element.textContent = `$${current.toLocaleString("en-US", { maximumFractionDigits: 0 })}`;
        requestAnimationFrame(updateCounter);
      } else {
        element.textContent = `$${targetValue.toLocaleString("en-US", { maximumFractionDigits: 0 })}`;
      }
    };

    updateCounter();
  };

  // Run the counter animation when the treasury section is visible
  const treasuryObserver = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const treasuryValue = document.querySelector(".treasury-value");
          if (treasuryValue) {
            // Extract the numeric value from the text content
            const valueString = treasuryValue.textContent!.replace(
              /[^\d]/g,
              ""
            );
            const targetValue = parseInt(valueString, 10);

            // Reset the text content to prepare for animation
            treasuryValue.textContent = "$0";

            // Start the animation
            animateCounter(treasuryValue, targetValue);

            // Unobserve after animating once
            treasuryObserver.unobserve(entry.target);
          }
        }
      });
    },
    { threshold: 0.5 }
  );

  // Observe the treasury section
  const treasurySection = document.getElementById("treasury");
  if (treasurySection) {
    treasuryObserver.observe(treasurySection);
  }

  // Parallax effect for background images
  const parallaxEffect = () => {
    const sections = document.querySelectorAll<HTMLDivElement>(
      "#hero, #token, #treasury, #resources"
    );

    window.addEventListener("scroll", () => {
      sections.forEach((section) => {
        const scrollPosition = window.pageYOffset;
        const sectionTop = section.offsetTop;
        const sectionHeight = section.offsetHeight;

        if (
          scrollPosition > sectionTop - window.innerHeight &&
          scrollPosition < sectionTop + sectionHeight
        ) {
          const speed = 0.3;
          const yPos = (scrollPosition - sectionTop) * speed;

          section.style.backgroundPosition = `center ${-yPos}px`;
        }
      });
    });
  };

  parallaxEffect();

  // Initialize the blue fire text effect with particles
  function initTextFireParticles() {
    const heroTitle = document.querySelector(".hero-content h1");
    if (!heroTitle) return;

    // Create a container for the particles
    const particlesContainer = document.createElement("div");
    particlesContainer.className = "fire-particles-container";
    particlesContainer.style.position = "absolute";
    particlesContainer.style.top = "0";
    particlesContainer.style.left = "0";
    particlesContainer.style.width = "100%";
    particlesContainer.style.height = "100%";
    particlesContainer.style.pointerEvents = "none";
    particlesContainer.style.zIndex = "2";

    // Insert the particles container as a sibling of the title
    heroTitle.parentNode!.insertBefore(
      particlesContainer,
      heroTitle.nextSibling
    );

    // Track mouse position for particle emission
    let mouseX = 0;
    let mouseY = 0;

    // Update particle emission point on mouse move
    document.addEventListener("mousemove", (e) => {
      const heroContent = document.querySelector("#hero");
      const rect = heroContent!.getBoundingClientRect();

      // Only track mouse within hero content area
      if (
        e.clientX >= rect.left &&
        e.clientX <= rect.right &&
        e.clientY >= rect.top &&
        e.clientY <= rect.bottom
      ) {
        mouseX = e.clientX;
        mouseY = e.clientY;
      } else {
        mouseX = 0;
        mouseY = 0;
      }
    });

    // Create particles that follow the title text
    function createTextParticles() {
      const titleRect = heroTitle!.getBoundingClientRect();

      // Emit particles along the text
      for (let i = 0; i < 2; i++) {
        // Randomly choose position along the text
        const x = titleRect.left + Math.random() * titleRect.width;
        const y = titleRect.top + Math.random() * titleRect.height;

        createFireParticle(particlesContainer, x, y);
      }

      // Emit particles near mouse position when inside hero area
      if (mouseX && mouseY) {
        for (let i = 0; i < 1; i++) {
          createFireParticle(particlesContainer, mouseX, mouseY);
        }
      }

      // Continue creating particles
      requestAnimationFrame(createTextParticles);
    }

    // Start the particle creation loop
    createTextParticles();
  }

  // Create a single blue fire particle
  function createFireParticle(container: HTMLDivElement, x: number, y: number) {
    const particle = document.createElement("div");

    // Random particle properties
    const size = Math.random() * 8 + 3;
    const duration = Math.random() * 2 + 1;
    const distance = Math.random() * 100 + 50;
    const angle = Math.random() * Math.PI * 2; // Random direction

    // Randomize the blue flame colors
    const blueShades = [
      "rgba(66, 198, 235, 0.7)", // Light blue
      "rgba(43, 77, 187, 0.7)", // Medium blue
      "rgba(156, 77, 255, 0.7)", // Purple blue
      "rgba(30, 144, 255, 0.7)", // Dodger blue
    ];
    const color = blueShades[Math.floor(Math.random() * blueShades.length)];

    // Convert window coordinates to relative container coordinates
    const rect = container.getBoundingClientRect();
    const relX = x - rect.left;
    const relY = y - rect.top;

    // Style the particle
    particle.style.position = "absolute";
    particle.style.width = `${size}px`;
    particle.style.height = `${size}px`;
    particle.style.backgroundColor = color;
    particle.style.borderRadius = "50%";
    particle.style.filter = "blur(2px)";
    particle.style.left = `${relX}px`;
    particle.style.top = `${relY}px`;
    particle.style.transform = "translate(-50%, -50%)";
    particle.style.opacity = "0";

    // Add the particle to the container
    container.appendChild(particle);

    // Animate the particle
    const startTime = performance.now();

    function animateParticle(timestamp: number) {
      const elapsed = timestamp - startTime;
      const progress = Math.min(elapsed / (duration * 1000), 1);

      if (progress < 1) {
        // Movement: rising with some drift in random direction
        const moveX = Math.cos(angle) * distance * progress;
        const moveY = -distance * progress; // Rising upward

        // Size: slightly grow then shrink
        const scaleProgress =
          progress < 0.3 ? progress / 0.3 : (1 - progress) / 0.7;
        const currentSize = size * (0.5 + scaleProgress * 0.5);

        // Opacity: fade in then out
        const opacity = progress < 0.2 ? progress / 0.2 : (1 - progress) / 0.8;

        // Apply styles
        particle.style.transform = `translate(calc(-50% + ${moveX}px), calc(-50% + ${moveY}px))`;
        particle.style.width = `${currentSize}px`;
        particle.style.height = `${currentSize}px`;
        particle.style.opacity = opacity.toString();

        // Continue animation
        requestAnimationFrame(animateParticle);
      } else {
        // Remove particle when animation completes
        particle.remove();
      }
    }

    // Start the animation
    requestAnimationFrame(animateParticle);
  }
</script>

<style
  define:vars={{
    heroImage: `url(${bg.src})`,
  }}
>
  /* Hero Section */
  #hero {
    min-height: 100vh;
    display: flex;
    align-items: center;
    background: var(--heroImage) no-repeat center center/cover;
    position: relative;
    z-index: 1;
  }

  #hero:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to right,
      rgba(7, 18, 30, 0.8) 0%,
      rgba(7, 18, 30, 0.6) 100%
    );
    z-index: -1;
  }

  #hero .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
    z-index: 2;
  }

  .hero-content {
    flex: 1;
    padding-right: 30px;
  }

  /* Blue Fire Text Effect */
  .hero-content h1 {
    font-size: 3.8rem;
    font-weight: 900;
    margin-bottom: 20px;
    line-height: 1.1;
    position: relative;
    color: transparent;
    text-shadow:
      0 0 5px rgba(66, 198, 235, 0.6),
      0 0 10px rgba(66, 198, 235, 0.4),
      0 0 20px rgba(66, 198, 235, 0.2);
    background-image: linear-gradient(
      0deg,
      #42c6eb 20%,
      #4b77ff 40%,
      #2b4dbb 60%,
      #9c4dff 80%
    );
    background-size: 100% 200%;
    background-clip: text;
    -webkit-background-clip: text;
    animation:
      blue-fire 4s ease-in-out infinite alternate,
      flicker 0.5s ease-in-out infinite alternate;
  }

  .hero-content h1 .highlight {
    color: transparent;
    font-weight: 900;
    background-image: linear-gradient(
      0deg,
      #9c4dff 20%,
      #6825ff 40%,
      #8742ff 60%,
      #e742ff 80%
    );
    background-size: 100% 200%;
    background-clip: text;
    -webkit-background-clip: text;
    text-shadow:
      0 0 5px rgba(156, 77, 255, 0.6),
      0 0 10px rgba(156, 77, 255, 0.4),
      0 0 20px rgba(156, 77, 255, 0.2);
  }

  .hero-content h1::before {
    content: "";
    position: absolute;
    top: -20%;
    left: -5%;
    width: 110%;
    height: 140%;
    background: radial-gradient(
        circle at 50% 120%,
        rgba(66, 198, 235, 0.1) 0%,
        transparent 50%
      ),
      radial-gradient(
        circle at 70% 80%,
        rgba(156, 77, 255, 0.1) 0%,
        transparent 40%
      );
    filter: blur(10px);
    z-index: -1;
    opacity: 0.8;
    animation: glow-pulse 3s ease-in-out infinite alternate;
  }

  .hero-content p {
    font-size: 1.3rem;
    color: var(--gray-text);
    margin-bottom: 30px;
    animation: fadeInUp 1s ease-out 0.3s forwards;
    opacity: 0;
    max-width: 600px;
  }

  .hero-buttons {
    display: flex;
    animation: fadeInUp 1s ease-out 0.6s forwards;
    opacity: 0;
  }

  .hero-image {
    flex: 1;
    text-align: center;
  }

  .hero-image img {
    max-width: 100%;
    animation: float 6s ease-in-out infinite;
  }

  /* About Section */
  #about {
    background: linear-gradient(135deg, var(--darker-bg) 0%, #0a1d2e 100%);
  }

  .content-flex {
    display: flex;
    gap: 50px;
    align-items: center;
  }

  .content-text {
    flex: 1;
  }

  .content-text h3 {
    font-size: 1.8rem;
    margin: 20px 0 15px;
    color: var(--secondary-color);
  }

  .content-text p {
    margin-bottom: 20px;
    color: var(--gray-text);
  }

  .about-cards {
    flex: 1;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
  }

  /* Token Section */
  #token {
    background: linear-gradient(135deg, #0c1a2a 0%, #07121e 100%);
    position: relative;
    z-index: 1;
  }

  #token:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(7, 18, 30, 0.7);
    z-index: -1;
  }

  .token-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 50px;
  }

  .token-info h3,
  .token-distribution h3 {
    font-size: 1.8rem;
    margin-bottom: 20px;
    color: var(--primary-color);
  }

  .token-info ul {
    margin-bottom: 30px;
  }

  .token-info ul li {
    margin-bottom: 15px;
    display: flex;
    align-items: center;
  }

  .token-info ul li i {
    color: var(--primary-color);
    margin-right: 10px;
  }

  .token-stats {
    display: flex;
    gap: 30px;
    margin-top: 30px;
  }

  .stat-item {
    background: rgba(255, 255, 255, 0.03);
    padding: 20px;
    border-radius: var(--border-radius);
    text-align: center;
    flex: 1;
    border: 1px solid rgba(66, 198, 235, 0.1);
    backdrop-filter: blur(5px);
  }

  .stat-item h4 {
    font-size: 1rem;
    margin-bottom: 10px;
    color: var(--gray-text);
  }

  .stat-item p {
    font-size: 1.4rem;
    font-weight: 700;
  }

  .chart-container {
    width: 100%;
    height: 300px;
    margin-bottom: 20px;
  }

  .distribution-legend {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 15px;
  }

  .legend-item {
    display: flex;
    align-items: center;
  }

  .color-box {
    width: 15px;
    height: 15px;
    border-radius: 3px;
    margin-right: 10px;
  }

  .legend-item p {
    font-size: 0.9rem;
    color: var(--gray-text);
  }

  /* Governance Section */
  #governance {
    background: linear-gradient(135deg, var(--darker-bg) 0%, #0a1d2e 100%);
  }

  .governance-process {
    max-width: 800px;
    margin: 0 auto 60px;
  }

  .process-step {
    display: flex;
    margin-bottom: 30px;
    position: relative;
  }

  .process-step:not(:last-child):after {
    content: "";
    position: absolute;
    top: 50px;
    left: 25px;
    width: 2px;
    height: calc(100% + 30px);
    background: var(--primary-color);
  }

  .step-number {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: var(--primary-color);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5rem;
    font-weight: 700;
    margin-right: 30px;
    position: relative;
    z-index: 2;
  }

  .step-content {
    flex: 1;
  }

  .step-content h3 {
    font-size: 1.5rem;
    margin-bottom: 10px;
  }

  .step-content p {
    color: var(--gray-text);
  }

  .governance-topics h3 {
    text-align: center;
    font-size: 1.8rem;
    margin-bottom: 30px;
    color: var(--primary-color);
  }

  .topics-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 30px;
  }

  .topic-card {
    background: rgba(255, 255, 255, 0.02);
    padding: 35px;
    border-radius: var(--border-radius);
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(66, 198, 235, 0.15);
    backdrop-filter: blur(5px);
    z-index: 1;
  }

  .topic-card:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--gradient-primary);
    opacity: 0;
    transition: opacity 0.4s ease;
    z-index: -1;
  }

  .topic-card:hover {
    transform: translateY(-15px) scale(1.03);
    border-color: var(--primary-color);
    box-shadow:
      0 15px 30px rgba(0, 0, 0, 0.3),
      0 0 15px var(--accent-glow);
  }

  .topic-card:hover:before {
    opacity: 0.08;
  }

  .topic-card i {
    font-size: 2.5rem;
    margin-bottom: 25px;
    background: linear-gradient(
      135deg,
      var(--primary-color),
      var(--secondary-color)
    );
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
  }

  .topic-card h4 {
    font-size: 1.3rem;
    margin-bottom: 15px;
  }

  .topic-card p {
    color: var(--gray-text);
  }

  /* Treasury Section - Hidden for now */
  #treasury {
    display: none;
    background: var(--darker-bg);
    position: relative;
    z-index: 1;
  }

  #treasury:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(15, 21, 35, 0.7);
    z-index: -1;
  }

  .treasury-highlight {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: 30px;
    margin-bottom: 60px;
  }

  .treasury-total {
    background: rgba(255, 255, 255, 0.03);
    padding: 30px;
    border-radius: var(--border-radius);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    border: 1px solid rgba(66, 198, 235, 0.1);
    backdrop-filter: blur(5px);
  }

  .treasury-total h3 {
    font-size: 1.4rem;
    margin-bottom: 20px;
    color: var(--gray-text);
  }

  .treasury-value {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 10px;
    background: var(--gradient-secondary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .treasury-date {
    color: var(--gray-text);
    font-size: 0.9rem;
  }

  .treasury-allocation h3 {
    font-size: 1.4rem;
    margin-bottom: 20px;
    color: var(--primary-color);
  }

  .allocation-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    gap: 20px;
  }

  .allocation-item {
    background: rgba(255, 255, 255, 0.03);
    padding: 20px;
    border-radius: var(--border-radius);
    text-align: center;
    border: 1px solid rgba(66, 198, 235, 0.1);
    backdrop-filter: blur(5px);
  }

  .allocation-item h4 {
    font-size: 1.2rem;
    margin-bottom: 10px;
  }

  .allocation-item p {
    color: var(--gray-text);
    margin-bottom: 5px;
  }

  .allocation-value {
    font-weight: 700;
    color: var(--light-text) !important;
  }

  .treasury-usage h3 {
    text-align: center;
    font-size: 1.8rem;
    margin-bottom: 30px;
    color: var(--primary-color);
  }

  .usage-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 30px;
  }

  .usage-card {
    background: rgba(255, 255, 255, 0.02);
    padding: 35px;
    border-radius: var(--border-radius);
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(66, 198, 235, 0.15);
    backdrop-filter: blur(5px);
    z-index: 1;
  }

  .usage-card:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--gradient-primary);
    opacity: 0;
    transition: opacity 0.4s ease;
    z-index: -1;
  }

  .usage-card:hover {
    transform: translateY(-15px) scale(1.03);
    border-color: var(--primary-color);
    box-shadow:
      0 15px 30px rgba(0, 0, 0, 0.3),
      0 0 15px var(--accent-glow);
  }

  .usage-card:hover:before {
    opacity: 0.08;
  }

  .usage-card i {
    font-size: 2.5rem;
    margin-bottom: 25px;
    background: linear-gradient(
      135deg,
      var(--primary-color),
      var(--secondary-color)
    );
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
  }

  .usage-card h4 {
    font-size: 1.3rem;
    margin-bottom: 15px;
  }

  .usage-card p {
    color: var(--gray-text);
  }

  /* Proposals Section - Hidden for now */
  #proposals {
    display: none;
    background: var(--darker-bg);
  }

  .proposals-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 30px;
    margin-bottom: 50px;
  }

  .proposal-card {
    background: rgba(255, 255, 255, 0.02);
    padding: 35px;
    border-radius: var(--border-radius);
    position: relative;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    border: 1px solid rgba(66, 198, 235, 0.15);
    backdrop-filter: blur(5px);
    z-index: 1;
  }

  .proposal-card:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--gradient-primary);
    opacity: 0;
    transition: opacity 0.4s ease;
    z-index: -1;
  }

  .proposal-card:hover {
    transform: translateY(-15px) scale(1.03);
    border-color: var(--primary-color);
    box-shadow:
      0 15px 30px rgba(0, 0, 0, 0.3),
      0 0 15px var(--accent-glow);
  }

  .proposal-card:hover:before {
    opacity: 0.08;
  }

  .proposal-status {
    position: absolute;
    top: 20px;
    right: 20px;
    padding: 5px 15px;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 600;
  }

  .proposal-status.active {
    background: rgba(0, 255, 0, 0.2);
    color: #4caf50;
  }

  .proposal-status.completed {
    background: rgba(0, 0, 255, 0.2);
    color: #2196f3;
  }

  .proposal-card h3 {
    font-size: 1.3rem;
    margin-bottom: 15px;
    padding-right: 80px;
  }

  .proposal-card p {
    color: var(--gray-text);
    margin-bottom: 20px;
  }

  .proposal-meta {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-bottom: 20px;
  }

  .proposal-meta span {
    display: flex;
    align-items: center;
    font-size: 0.9rem;
    color: var(--gray-text);
  }

  .proposal-meta span i {
    margin-right: 10px;
    color: var(--primary-color);
  }

  .proposals-cta {
    background: rgba(255, 255, 255, 0.03);
    padding: 40px;
    border-radius: var(--border-radius);
    text-align: center;
    border: 1px solid rgba(66, 198, 235, 0.1);
    backdrop-filter: blur(5px);
  }

  .proposals-cta h3 {
    font-size: 1.8rem;
    margin-bottom: 15px;
  }

  .proposals-cta p {
    color: var(--gray-text);
    margin-bottom: 20px;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  /* Resources Section */
  #resources {
    background: linear-gradient(135deg, #0c1a2a 0%, #07121e 100%);
    position: relative;
    z-index: 1;
  }

  #resources:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(15, 21, 35, 0.7);
    z-index: -1;
  }

  .resources-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 30px;
  }

  .resource-card {
    background: rgba(255, 255, 255, 0.02);
    padding: 35px;
    border-radius: var(--border-radius);
    text-align: center;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    display: flex;
    flex-direction: column;
    align-items: center;
    border: 1px solid rgba(66, 198, 235, 0.15);
    backdrop-filter: blur(5px);
    z-index: 1;
  }

  .resource-card:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--gradient-primary);
    opacity: 0;
    transition: opacity 0.4s ease;
    z-index: -1;
  }

  .resource-card:hover {
    transform: translateY(-15px) scale(1.03);
    border-color: var(--primary-color);
    box-shadow:
      0 15px 30px rgba(0, 0, 0, 0.3),
      0 0 15px var(--accent-glow);
  }

  .resource-card:hover:before {
    opacity: 0.08;
  }

  .resource-card i {
    font-size: 2.5rem;
    margin-bottom: 25px;
    background: linear-gradient(
      135deg,
      var(--primary-color),
      var(--secondary-color)
    );
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
  }

  .resource-card h3 {
    font-size: 1.3rem;
    margin-bottom: 15px;
    transition: all 0.3s ease;
  }

  .resource-card:hover h3 {
    transform: scale(1.05);
    color: var(--primary-color);
  }

  .resource-card p {
    color: var(--gray-text);
  }

  /* Media Queries */
  @media (max-width: 1024px) {
    .hero-content h1 {
      font-size: 3rem;
    }

    .token-grid {
      grid-template-columns: 1fr;
    }

    .treasury-highlight {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 768px) {
    #hero .container {
      flex-direction: column;
      text-align: center;
    }

    .hero-content {
      padding-right: 0;
      margin-bottom: 50px;
    }

    .hero-content h1 {
      font-size: 2.5rem;
    }

    .hero-buttons {
      justify-content: center;
    }

    .content-flex {
      flex-direction: column;
    }
  }

  @media (max-width: 480px) {
    .hero-content h1 {
      font-size: 2rem;
    }

    .token-stats {
      flex-direction: column;
    }

    .proposals-list {
      grid-template-columns: 1fr;
    }

    .resources-grid {
      grid-template-columns: 1fr;
    }
  }

  .topic-card:hover:before,
  .resource-card:hover:before,
  .usage-card:hover:before {
    opacity: 0.08;
  }

  .topic-card:hover,
  .resource-card:hover,
  .usage-card:hover {
    background: rgba(66, 198, 235, 0.1);
    transform: translateY(-15px) scale(1.03);
    box-shadow:
      0 15px 30px rgba(0, 0, 0, 0.3),
      0 0 15px var(--accent-glow);
  }

  /* Add magical particles to hero section */
  @keyframes float-particle {
    0% {
      transform: translateY(0) rotate(0deg);
      opacity: 0;
    }
    50% {
      opacity: 0.8;
    }
    100% {
      transform: translateY(-100px) rotate(360deg);
      opacity: 0;
    }
  }

  #hero:after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: radial-gradient(
        circle at 20% 80%,
        rgba(66, 198, 235, 0.3) 0.1%,
        transparent 0.5%
      ),
      radial-gradient(
        circle at 40% 70%,
        rgba(66, 198, 235, 0.3) 0.1%,
        transparent 0.5%
      ),
      radial-gradient(
        circle at 60% 90%,
        rgba(156, 77, 255, 0.3) 0.1%,
        transparent 0.5%
      ),
      radial-gradient(
        circle at 80% 60%,
        rgba(156, 77, 255, 0.3) 0.1%,
        transparent 0.5%
      );
    background-size: 120px 120px;
    background-repeat: repeat;
    animation: float-particle 15s linear infinite;
    z-index: -1;
    opacity: 0.5;
  }

  /* Add this to make sure the JS functionality works */
  .topic-card,
  .token-info,
  .token-distribution,
  .governance-process,
  .topics-grid,
  .resources-grid,
  .content-flex,
  .token-grid {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s ease;
  }
</style>
